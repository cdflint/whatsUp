/*! whatsup 2016-11-08 */
var define=function(a){var b=a,c=b.extend,d=null;return null==c||"undefined"==typeof c?(d=function(){"undefined"!=typeof this.initialize&&this.initialize.apply(this,arguments)},d.prototype=b):(d=function(){var a="function"==typeof this.initialize?this.initialize:"undefined";"function"==typeof a&&a.apply(this,arguments)},extend(d,c),copy(d.prototype,b)),d},extend=function(a,b){var c=function(){};c.prototype=b.prototype,a.prototype=new c,a.prototype.constructor=a,a.parent=b.prototype},copy=function(a,b){if(a=a||{},b){for(var c in b){var d=b[c];void 0!==d&&(a[c]=d)}var e="function"==typeof window.Event&&b instanceof window.Event;!e&&b.hasOwnProperty&&b.hasOwnProperty("toString")&&(a.toString=b.toString)}return a};app.Map.LeafletViewer=define({name:"LeafletViewer",extend:app.Map.MapViewer,_className:"LeafletViewer",initialize:function(a){app.Map.MapViewer.prototype.initialize.apply(this,arguments);var b=L.tileLayer("http://{s}.tiles.mapbox.com/v3/esrgc.map-y9awf40v/{z}/{x}/{y}.png"),c={"Base Map":b};this.features=new L.FeatureGroup([]),this.geoJsonFeatures=L.geoJson(),this.clusterGroup=new L.MarkerClusterGroup(this.clusterOptions);var d={Overlays:this.geoJsonFeatures};if(this.map=L.map(this.el,{layers:[b,this.features,this.geoJsonFeatures,this.clusterGroup],center:this.center||new L.LatLng(39,-76.7),zoom:this.zoomLevel||7,scrollWheelZoom:this.scrollZoom||!1}),"undefined"!=typeof this.baseLayers)for(var e in this.baseLayers){var f=this.baseLayers[e];void 0!==f&&(c[e]=f)}var d={Overlays:this.geoJsonFeatures};if("undefined"!=typeof this.overlays)for(var e in this.overlays){var f=this.overlays[e];d[e]=f}},getGeoJsonGroup:function(){return this.geoJsonFeatures},getFeatureGroup:function(){return this.features},addGeoJsonLayer:function(a,b){return"undefined"==typeof a?void console.log("No data found"):(console.log("Adding data to map..."),"undefined"!=this.geoJsonFeatures&&("undefined"==typeof b?this.geoJsonFeatures.addLayer(L.geoJson(a)):this.geoJsonFeatures.addLayer(L.geoJson(a,b))),void console.log("------Data added to map"))},clearGeoJsonFeatures:function(){"undefined"!=this.geoJsonFeatures&&this.geoJsonFeatures.clearLayers()},addFeatureToFeatureGroup:function(a){var b=this.features;return"undefined"==typeof b?void console.log("No feature group found"):void(null!=a&&b.addLayer(a))},clearFeatures:function(){var a=this.features;return"undefined"==typeof a?void console.log("No feature group found"):void a.clearLayers()},createFeature:function(a){var b=new Wkt.Wkt;b.read(a);var c=b.toObject();return c},addClusterMarker:function(a){"undefined"!=typeof this.clusterGroup&&this.clusterGroup.addLayer(a)},clearClusterMarkers:function(){this.clusterGroup.clearLayers()},getClusterGroup:function(){return this.clusterGroup},getFeaturesBound:function(){var a=this.features;return"undefined"==typeof a?void console.log("No feature group found"):a.getBounds()},getGeoJsonFeaturesBound:function(){var a=this.geoJsonFeatures;return"undefined"==typeof a?void console.log("No geojson feature found"):a.getBounds()},zoomToFeatures:function(){var a=this.getFeaturesBound();"undefined"!=typeof a&&this.map.fitBounds(a)},zoomToGeoJsonFeatures:function(){var a=this.getGeoJsonFeaturesBound();"undefined"!=typeof a&&this.map.fitBounds(a)},zoomToPoint:function(a,b){var c=b||this.map.getMaxZoom();if("undefined"!=typeof a.x&&"undefined"!=typeof a.y){var d=new L.LatLng(a.x,a.y);this.map.setView(d,c)}else this.map.setView(a,c)},pointInPolygon:function(a,b){for(var c=a[0],d=a[1],e=!1,f=0,g=b.length-1;f<b.length;g=f++){var h=b[f][0],i=b[f][1],j=b[g][0],k=b[g][1],l=i>d!=k>d&&c<(j-h)*(d-i)/(k-i)+h;l&&(e=!e)}return e}}),app.Map.MapViewer=define({name:"MapViewer",_className:"MapViewer",initialize:function(a){copy(this,a)},zoomToExtent:function(a){this.map.fitBounds(new L.LatLngBounds(new L.LatLng(a.xmin,a.ymin),new L.LatLng(a.xmax,a.ymax)))},zoomToFullExtent:function(){},zoomToXY:function(a,b,c){"undefined"==typeof c?this.map.setView(new L.LatLng(b,a),this.map.getMaxZoom()):this.map.setView(new L.LatLng(b,a),c)},zoomIn:function(){this.map.zoomIn()},zoomOut:function(){this.map.zoomOut()},zoomToDataExtent:function(a){this.map.fitBounds(a.getBounds())},panTo:function(a,b){this.map.panTo(new L.LatLng(b,a))},locate:function(){this.map.locateAndSetView(this.map.getMaxZoom()-2)}});